plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'distribution'
    id 'java-library'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
    id 'com.jfrog.bintray' version '1.8.5'
}

group = 'com.redislabs'
description = 'Spring RediSearch'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
	jcenter()
	mavenCentral()
	mavenLocal()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter') {
		exclude group: 'io.lettuce', module: 'lettuce-core'
	}
	api 'com.redislabs:lettusearch:3.0.1'
	api 'org.apache.commons:commons-pool2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

distributions {
    main {
        contents {
            from (project.docsDir) {
                into 'docs'
            }
            from 'README.md'
            from 'LICENSE'
        }
    }
}

distTar {
    compression = Compression.GZIP
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Spring RediSearch'
                description = 'Spring configuration for LettuSearch'
                url = 'https://github.com/RediSearch/spring-redisearch'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/RediSearch/spring-redisearch.git'
                    developerConnection = 'scm:git:git@github.com:RediSearch/spring-redisearch.git'
                    url = 'https://github.com/RediSearch/spring-redisearch'
                }
            }
        }
    }
}

githubRelease {
    token = project.hasProperty('githubToken') ? project.property('githubToken') : ''
    owner "RediSearch"
    repo "spring-redisearch"
    releaseAssets distZip, distTar
    draft true
    body changelog()
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : ''
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/RediSearch/spring-redisearch.git'
        version {
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
                password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
            }
        }
    }
}

bintrayUpload.dependsOn ":githubRelease"
afterReleaseBuild.dependsOn bintrayUpload
